{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByAlphabet","ALPABET","sortByLength","LENGTH","reset","this","modifiedGoods","goods","visibleGoods","sort","firstGood","secondGood","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEK,eAAiB,WACf,EAAKD,SAAS,CAAEH,SAAUL,EAASU,WAbvC,EAgBEC,aAAe,WACb,EAAKH,SAAS,CAAEH,SAAUL,EAASY,UAjBvC,EAoBEC,MAAQ,WACN,EAAKL,SAAS,CAAEJ,YAAY,EAAOC,SAAUL,EAASM,QArB1D,4CAwBE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAzDH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQf,GACN,KAAKL,EAASU,QACZ,OAAOS,EAAUE,cAAcD,GAEjC,KAAKpB,EAASY,OACZ,OAAOO,EAAUG,OAASF,EAAWE,OAEvC,QACE,OAAO,MAITlB,GACFa,EAAaV,UAGRU,EAkCiBM,CACpBtB,EAAiB,CAAEG,aAAYC,aAGjC,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYrB,IAAaL,EAASU,UAGtCiB,QAASb,KAAKL,eARhB,iCAaA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYrB,IAAaL,EAASY,SAGtCe,QAASb,KAAKH,aARhB,4BAaA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAA2B,IAAftB,IAGhBuB,QAASb,KAAKP,QARhB,uBAaiB,IAAfH,GAAwBC,IAAaL,EAASM,OAE5C,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKD,MAHhB,sBAUN,6BACE,6BACGE,EAAca,KAAI,SAAAC,GACjB,OACE,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBA1FvB,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bfb42f2c.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return firstGood.localeCompare(secondGood);\n\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const modifiedGoods = getReorderedGoods(\n      goodsFromServer, { isReversed, sortType },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPABET,\n              },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': isReversed !== true,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed !== false || sortType !== SortType.NONE)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {modifiedGoods.map(good => {\n              return (\n                <li\n                  data-cy=\"Good\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              );\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}